[project]
name = "oil"
version = "0.0.2"
description = "oil is a utility library."
readme = { file = "README", content-type = "text/markdown" }

authors = [
	{ name = "iris", email = "iris@serv.pink" },
]

requires-python = ">=3.10"
dependencies = [
	"psycopg2",
	"python-dateutil",
	"requests",
]

classifiers = [
	"Programming Language :: Python :: 3",
	"Operating System :: OS Independent",
]

[project.urls]
Homepage = "https://github.com/FanFicDev/python-oil"
"Bug Tracker" = "https://github.com/FanFicDev/python-oil/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
	"hatch",
	"mypy",
	"pytest",
	"pytest-cov",
	"ruff",
	"tox",
	"tox-uv",
	"types-psycopg2",
	"types-python-dateutil",
	"types-requests",
]

[tool.mypy]
follow_imports = "normal"
ignore_missing_imports = true
python_version = "3.10"

# https://mypy.readthedocs.io/en/stable/config_file.html#disallow-dynamic-typing
disallow_any_unimported = true
disallow_any_expr = true
disallow_any_decorated = true
disallow_any_explicit = true
disallow_any_generics = true
disallow_subclassing_any = true

# https://mypy.readthedocs.io/en/stable/config_file.html#untyped-definitions-and-calls
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true

# https://mypy.readthedocs.io/en/stable/config_file.html#none-and-optional-handling
# default: implicit_optional = false
# default: strict_optional = true

# https://mypy.readthedocs.io/en/stable/config_file.html#configuring-warnings
warn_redundant_casts = true
warn_unused_ignores = true
# default: warn_no_return = true
warn_return_any = true
warn_unreachable = true

# https://mypy.readthedocs.io/en/latest/config_file.html#miscellaneous-strictness-flags
implicit_reexport = false

# https://mypy.readthedocs.io/en/stable/config_file.html#configuring-error-messages
show_error_context = true
show_column_numbers = true
show_error_codes = true

[tool.ruff.lint]
extend-select = [
	"UP",  # pyupgrade
	"B",   # flake8-bugbear
	"SIM", # flake8-simplify
	"I",   # isort
]

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
env_list =
  type, lint, py3.{12,11,10}
skip_missing_interpreters = true

[testenv]
commands = pytest -v --tb=short --basetemp={envtmpdir} {posargs}

[testenv:type]
skip_install = true
commands = mypy {posargs:src tests}

[testenv:lint]
skip_install = true
commands =
  ruff format {posargs:src tests}
  ruff check {posargs:src tests}
"""
